---
title: "Coding4"
author: "Mengjia Zeng and Weian Yin"
date: "2021/10/24"
output: html_document
---

Team Members:

Weian Yin  NetID: weiany2
Work: Part II code

Mengjia Zeng   NetID: mengjia6  
Work: Part I codes and write expressions.

## Part I

```{r}
set.seed(6199)  # replace 234 by the last 4-dig of your University ID
#para to be a list of 3, prob, mean and sigma. 
Estep = function(data, G, para){
  comp.prop = matrix(0, n, G)
  a = matrix(0, n, G)
  for (j in 1:G){
    new1 = matrix(0, n, ncol(data))
    new1 = as.matrix(sweep(data, 2, para$mean[,1]))
    new1 = new1 %*% solve(para$Sigma) %*% t(new1)
    new1mu = matrix(0, n, 1)
    new1mu = diag(new1)
    new1mu = as.matrix(new1mu, nrow = n)
    newj = matrix(0, n, ncol(data))
    newj = as.matrix(sweep(data, 2, para$mean[,j]))
    newj = newj %*% solve(para$Sigma) %*% t(newj)
    newjmu = matrix(0, n, 1)
    newjmu = diag(newj)
    newjmu = as.matrix(newjmu, nrow = n)
    a[,j] = matrix(log(para$prob[j]/para$prob[1]), n, 1) + new1mu/2 - newjmu/2
    a[,j] = exp(a[,j])
  }
  
  comp.prop = t(apply(a, 1, function(i) i/sum(i)))
  
  return(comp.prop)
}
```


```{r}
Mstep = function(data, G, para, post.prob){
  pi = colSums(post.prob)/n
  m = ncol(data)
  mean_new = matrix(0, m, G)
  
  for (j in 1:G){
    mean = matrix(0, n, m) 
    mean = t(t(data) %*% diag(post.prob[,j]))
    mean_new[,j] = colSums(mean)/(colSums(post.prob)[j])
  }
  
  Sigma1 = matrix(0, m, m)
  S = matrix(0, m, m)
  for (j in 1:G){
    new_data1 = matrix(0, m, m)
    new_data = matrix(0, n, m)
    new_data = sweep(data, 2, mean_new[,j])
    new_data = as.matrix(new_data)
    new_data1 = t(new_data) %*% diag(post.prob[,j]) %*% new_data
    S = S + new_data1
  }
  
  Sigma1 = solve(n * diag(m) %*% solve(S))
  
  return(para = list("prob" = pi, "mean" = mean_new, "Sigma" = Sigma1))
  
}
```

```{r}
myEM = function(data, itmax, G, para){
  # itmax: num of iterations
  # G:     num of components
  # para:  list of parameters (prob, mean, Sigma)
  for(t in 1:itmax){
    post.prob <- Estep(data, G, para)
    para <- Mstep(data, G, para, post.prob)
    t = t+1
  }
  return(para)
}
```


```{r}
options(digits=8)
options()$digits
```

```{r}
library(mclust)
data("faithful")
dim(faithful)
head(faithful)
n = nrow(faithful)
```


```{r}
K = 2
gID = sample(1:K, n, replace = TRUE)
Z = matrix(0, n, K)
for(k in 1:K)
  Z[gID == k, k] = 1 
ini0 = mstep(modelName="EEE", faithful , Z)$parameters
```

```{r}
para0 = list(prob = ini0$pro, 
              mean = ini0$mean, 
              Sigma = ini0$variance$Sigma)
para0
```

```{r}
myEM(faithful, 20, 2, para0)
```

```{r}
Rout <- em(modelName = "EEE", data = faithful,
           control = emControl(eps=0, tol=0, itmax = 20), 
           parameters = ini0)$parameters
list(Rout$pro, Rout$mean, Rout$variance$Sigma)
```

```{r}
K <- 3
gID <- sample(1:K, n, replace = TRUE)
Z <- matrix(0, n, K)
for(k in 1:K)
  Z[gID == k, k] <- 1 
ini0 <- mstep(modelName="EEE", faithful , Z)$parameters
para0 <- list(prob = ini0$pro, 
              mean = ini0$mean, 
              Sigma = ini0$variance$Sigma)
para0
```

```{r}
myEM(data=faithful, itmax=20, G=K, para=para0)
```

```{r}
Rout <- em(modelName = "EEE", data = faithful,
           control = emControl(eps=0, tol=0, itmax = 20), 
           parameters = ini0)$parameters
list(Rout$pro, Rout$mean, Rout$variance$Sigma)
```

## Expressions

![pic01](D:/Statistics/STAT542/Coding4/Ex_1.jpg)
